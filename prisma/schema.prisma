generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String  @id @default(cuid())
  clerkId String  @unique
  email   String  @unique
  name    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  courses Course[]

  @@index([clerkId])
  @@index([email])
  @@map("users")
}

model Course {
  id          String  @id @default(cuid())
  title       String
  description String?
  difficulty  String?
  video       Boolean @default(false)
  videoUrl    String?
  prompt      String?
  layout      Json?
  status      String? @default("PENDING")
  isPublic    Boolean @default(false)
  isCompleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  chapters Chapter[]

  @@index([userId])
  @@map("courses")
}

model Chapter {
  id                String  @id @default(cuid())
  courseTitle       String
  courseDescription String?
  courseDifficulty  String?
  title             String
  description       String?
  chapterNumber     Int
  layout            Json
  status            String? @default("PENDING")
  content           String?
  isCompleted       Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  courseId String

  @@index([courseId])
  @@map("chapters")
}
